#include <fstream>
#include <string>
#include <sstream>
#include <iostream>
#include"Tools.h"


template<typename T>
void movingAverage_CArrays(int range, int size, T* arr, T* res){

  int low = (range%2) == 0 ? range/2 : (range-1)/2;
  int high = (range%2) == 0 ? range/2 : (range+1)/2;

  int arrCounter = 0;

  while(arrCounter < size){

    int counterUp = arrCounter;
    int counterDown = arrCounter-1;
    int lowEnd = arrCounter - low < 0 ? 0 : arrCounter-low;
    int highEnd = arrCounter+high >= size ? size : arrCounter + high;
    int denom1 = lowEnd == 0 ? arrCounter : low;
    int denom2 = highEnd == size ? size - arrCounter : high;
    double dum = 0.0;

    while(counterDown >= lowEnd){
      dum += arr[counterDown];
      counterDown--;
    }

    while(counterUp < highEnd){
      dum += arr[counterUp];
      counterUp++;
    }


    res[arrCounter] = dum/(denom1 + denom2);
    arrCounter++;
  }
}


void writeToFile(int sieveSize){

  std::ofstream file("data.csv");

  std::string filename;
  std::ifstream listfile("/home/koyo/Documents/CPP/Plotter/list.txt");
  int arrCounter = 0;
  int counter = 0;

  while(std::getline(listfile, filename)){

    std::ifstream datafile("/home/koyo/Documents/Measurements/20211202-0002/" + filename);
    std::string lines;
    int linecounter = 0;

    while(getline(datafile,lines, '\n')){

      if(linecounter > 2 && counter%sieveSize == 0){
        file << lines << std::endl;
	arrCounter++;}

      counter++;
      linecounter++;
    }
    datafile.close();

  }
  listfile.close();
  file.close();
}



void writeToFile2(int sieveSize, int totalCols){

  std::ofstream file("data.csv");

  std::string filename;
  std::ifstream listfile("/home/koyo/Documents/CPP/Plotter/list.txt");
  int arrCounter = 0;
  int counter = 0;

  while(std::getline(listfile, filename)){

    std::ifstream datafile("/home/koyo/Documents/Measurements/20211202-0002/" + filename);
    std::string lines;
    int linecounter = 0;

    while(std::getline(datafile,lines, '\n')){

      if(linecounter > 2 && counter%sieveSize == 0){

	std::stringstream ss(lines);
        int position = 0;

	while(std::getline(ss,lines,'\t')){

          if(position == 0){
            file << arrCounter << '\t';
            position++;}
          else if(position == totalCols-1){
            file << lines << '\n';}
          else{
            file << lines << '\t';
            position++;}
        }
        arrCounter++;
      }

      counter++;
      linecounter++;
    }
    datafile.close();

  }
  listfile.close();
  file.close();
}



void writeArrayToFile(int size, double* arr1, double* arr2){

  std::ofstream file("data.csv");
  int arrCounter = 0;

  while(arrCounter < size){

    file << arrCounter << '\t' << arr1[arrCounter] << '\t' << arr2[arrCounter] \
<< '\n';
    arrCounter++;
  }
  file.close();

}
